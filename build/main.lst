ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB70:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "decode_logic.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_CAN_Init(void);
  58:Core/Src/main.c **** static void MX_I2C1_Init(void);
  59:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader;
  68:Core/Src/main.c **** CAN_RxHeaderTypeDef RxHeader;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** //uint8_t TxData[8];
  71:Core/Src/main.c **** uint8_t RxData[8];
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** uint8_t TxMailbox;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** char msg[50] = {"\0"};
  76:Core/Src/main.c **** /* USER CODE END 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /**
  79:Core/Src/main.c ****   * @brief  The application entry point.
  80:Core/Src/main.c ****   * @retval int
  81:Core/Src/main.c ****   */
  82:Core/Src/main.c **** int main(void)
  83:Core/Src/main.c **** {
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 3


  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   MX_CAN_Init();
 107:Core/Src/main.c ****   MX_I2C1_Init();
 108:Core/Src/main.c ****   MX_USART1_UART_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c ****   //HAL_CAN_MspInit(&hcan);
 111:Core/Src/main.c ****   //Start CAN
 112:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   //Activate Notification when CAN_IT_RXFIFO0_MSG_PENDING interrupt is triggered.
 115:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan,CAN_IT_RX_FIFO0_MSG_PENDING);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   //A Callback function is called when interrupt CAN_IT_RX_FIFO0_MSG_PENDING is triggered: defined 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   // TxData[0] = 0x64;
 121:Core/Src/main.c ****   // TxData[1] = 0x64;
 122:Core/Src/main.c ****   // TxData[2] = 0x64;
 123:Core/Src/main.c ****   // TxData[3] = 0x64;
 124:Core/Src/main.c ****   // TxData[4] = 0x64;
 125:Core/Src/main.c ****   // TxData[5] = 0x64;
 126:Core/Src/main.c ****   // TxData[6] = 0x64;
 127:Core/Src/main.c ****   // TxData[7] = 0x64;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   // TxHeader.DLC = 8;
 130:Core/Src/main.c ****   // TxHeader.StdId = 0x18FF;
 131:Core/Src/main.c ****   // TxHeader.IDE = CAN_ID_STD;
 132:Core/Src/main.c ****   // TxHeader.RTR = CAN_RTR_DATA;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   // if(HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox) == HAL_OK) {
 135:Core/Src/main.c ****   //     sprintf(msg, "Message Sent\n");
 136:Core/Src/main.c ****   //     HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 137:Core/Src/main.c ****   //   }
 138:Core/Src/main.c ****   /* USER CODE END 2 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   while (1)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     /* USER CODE END WHILE */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 147:Core/Src/main.c ****   }
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 4


 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 161:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief CAN Initialization Function
 192:Core/Src/main.c ****   * @param None
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** static void MX_CAN_Init(void)
 196:Core/Src/main.c **** {
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 5


 205:Core/Src/main.c ****   hcan.Instance = CAN1;
 206:Core/Src/main.c ****   hcan.Init.Prescaler = 4;
 207:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 208:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 209:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_15TQ;
 210:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 211:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 212:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 213:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 214:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 215:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 216:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 223:Core/Src/main.c ****   CAN_FilterTypeDef canfilterConfig;
 224:Core/Src/main.c ****   canfilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 225:Core/Src/main.c ****   canfilterConfig.FilterBank = 10;
 226:Core/Src/main.c ****   canfilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 227:Core/Src/main.c ****   canfilterConfig.FilterIdHigh = 0x0000;
 228:Core/Src/main.c ****   canfilterConfig.FilterIdLow = 0x0000;
 229:Core/Src/main.c ****   canfilterConfig.FilterMaskIdHigh = 0;
 230:Core/Src/main.c ****   canfilterConfig.FilterMaskIdLow = 0;
 231:Core/Src/main.c ****   canfilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 232:Core/Src/main.c ****   canfilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   if(HAL_CAN_ConfigFilter(&hcan, &canfilterConfig) != HAL_OK) {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_I2C1_Init(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 256:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 257:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 258:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 260:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 261:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 6


 262:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 263:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 264:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 265:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** }
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** /**
 276:Core/Src/main.c ****   * @brief USART1 Initialization Function
 277:Core/Src/main.c ****   * @param None
 278:Core/Src/main.c ****   * @retval None
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 281:Core/Src/main.c **** {
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 290:Core/Src/main.c ****   huart1.Instance = USART1;
 291:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 292:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 293:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 294:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 295:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 296:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 297:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 298:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** }
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /**
 309:Core/Src/main.c ****   * @brief GPIO Initialization Function
 310:Core/Src/main.c ****   * @param None
 311:Core/Src/main.c ****   * @retval None
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c **** static void MX_GPIO_Init(void)
 314:Core/Src/main.c **** {
  26              		.loc 1 314 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 7


  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 315:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 315 3 view .LVU1
  40              		.loc 1 315 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 316:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 317:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 320:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 320 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 320 3 view .LVU4
  49              		.loc 1 320 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 320 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 320 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 320 3 view .LVU8
 321:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 321 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 321 3 view .LVU10
  65              		.loc 1 321 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 321 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
  73              		.loc 1 321 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 321 3 view .LVU14
 322:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 322 3 view .LVU15
  78              	.LBB6:
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 8


  79              		.loc 1 322 3 view .LVU16
  80              		.loc 1 322 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 322 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00402 		and	r2, r2, #4
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 322 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 322 3 view .LVU20
 323:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 323 3 view .LVU21
  93              	.LBB7:
  94              		.loc 1 323 3 view .LVU22
  95              		.loc 1 323 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
  97 0048 42F00802 		orr	r2, r2, #8
  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 323 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00803 		and	r3, r3, #8
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 323 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE7:
 106              		.loc 1 323 3 view .LVU26
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 326:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 107              		.loc 1 326 3 view .LVU27
 108 0058 0B4D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF40051 		mov	r1, #8192
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 329:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 114              		.loc 1 329 3 view .LVU28
 115              		.loc 1 329 23 is_stmt 0 view .LVU29
 116 0066 4FF40053 		mov	r3, #8192
 117 006a 0493     		str	r3, [sp, #16]
 330:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 330 3 is_stmt 1 view .LVU30
 119              		.loc 1 330 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
 121 006e 0593     		str	r3, [sp, #20]
 331:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 331 3 is_stmt 1 view .LVU32
 123              		.loc 1 331 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 332:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 332 3 is_stmt 1 view .LVU34
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 9


 126              		.loc 1 332 25 is_stmt 0 view .LVU35
 127 0072 0223     		movs	r3, #2
 128 0074 0793     		str	r3, [sp, #28]
 333:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 129              		.loc 1 333 3 is_stmt 1 view .LVU36
 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 336:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 337:Core/Src/main.c **** }
 134              		.loc 1 337 1 is_stmt 0 view .LVU37
 135 007e 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0080 30BD     		pop	{r4, r5, pc}
 140              	.L4:
 141 0082 00BF     		.align	2
 142              	.L3:
 143 0084 00100240 		.word	1073876992
 144 0088 00100140 		.word	1073811456
 145              		.cfi_endproc
 146              	.LFE70:
 148              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 149              		.align	2
 150              	.LC0:
 151 0000 43616C6C 		.ascii	"Callback called Received\000"
 151      6261636B 
 151      2063616C 
 151      6C656420 
 151      52656365 
 152 0019 000000   		.align	2
 153              	.LC1:
 154 001c 57697265 		.ascii	"Wire Connected: %d\012Battery Charging: %d\012Batte"
 154      20436F6E 
 154      6E656374 
 154      65643A20 
 154      25640A42 
 155 0049 7279204C 		.ascii	"ry Low: %s\012Battery Ready: %s\012\000"
 155      6F773A20 
 155      25730A42 
 155      61747465 
 155      72792052 
 156 0067 00       		.align	2
 157              	.LC2:
 158 0068 534F433A 		.ascii	"SOC: %d\000"
 158      20256400 
 159              		.global	__aeabi_i2d
 160              		.global	__aeabi_ddiv
 161              		.global	__aeabi_d2f
 162              		.global	__aeabi_f2d
 163              		.align	2
 164              	.LC3:
 165 0070 42617474 		.ascii	"Battery Current: %f\000"
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 10


 165      65727920 
 165      43757272 
 165      656E743A 
 165      20256600 
 166              		.global	__aeabi_i2f
 167              		.align	2
 168              	.LC4:
 169 0084 42617474 		.ascii	"Battery Voltage: %f\000"
 169      65727920 
 169      566F6C74 
 169      6167653A 
 169      20256600 
 170              		.align	2
 171              	.LC5:
 172 0098 4E6F2046 		.ascii	"No Failure\000"
 172      61696C75 
 172      726500
 173 00a3 00       		.align	2
 174              	.LC6:
 175 00a4 42617474 		.ascii	"Battery Failure: %s\000"
 175      65727920 
 175      4661696C 
 175      7572653A 
 175      20257300 
 176              		.align	2
 177              	.LC7:
 178 00b8 4C657665 		.ascii	"Level 1(Stop Now)\000"
 178      6C203128 
 178      53746F70 
 178      204E6F77 
 178      2900
 179 00ca 0000     		.align	2
 180              	.LC8:
 181 00cc 4C657665 		.ascii	"Level 2(Power Reduce to 50)\000"
 181      6C203228 
 181      506F7765 
 181      72205265 
 181      64756365 
 182              		.align	2
 183              	.LC9:
 184 00e8 4C657665 		.ascii	"Level 3(Alarm)\000"
 184      6C203328 
 184      416C6172 
 184      6D2900
 185              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 186              		.align	1
 187              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	HAL_CAN_RxFifo0MsgPendingCallback:
 193              	.LVL2:
 194              	.LFB71:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** uint8_t wire_connected,battery_charging, battery_low, battery_ready, discharge_MOS;
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 11


 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 195              		.loc 1 343 65 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		.loc 1 343 65 is_stmt 0 view .LVU39
 200 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 20
 203              		.cfi_offset 4, -20
 204              		.cfi_offset 5, -16
 205              		.cfi_offset 6, -12
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 32
 211 0004 0746     		mov	r7, r0
 344:Core/Src/main.c ****   sprintf(msg, "Callback called Received");
 212              		.loc 1 344 3 is_stmt 1 view .LVU40
 213 0006 544C     		ldr	r4, .L13+8
 214 0008 A446     		mov	ip, r4
 215 000a 544D     		ldr	r5, .L13+12
 216 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 217              	.LVL3:
 218              		.loc 1 344 3 is_stmt 0 view .LVU41
 219 000e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 220 0012 95E80700 		ldm	r5, {r0, r1, r2}
 221 0016 ACE80300 		stmia	ip!, {r0, r1}
 222 001a 8CF80020 		strb	r2, [ip]
 345:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY); 
 223              		.loc 1 345 3 is_stmt 1 view .LVU42
 224              		.loc 1 345 45 is_stmt 0 view .LVU43
 225 001e 2046     		mov	r0, r4
 226 0020 FFF7FEFF 		bl	strlen
 227              	.LVL4:
 228              		.loc 1 345 3 view .LVU44
 229 0024 4E4E     		ldr	r6, .L13+16
 230 0026 4FF0FF33 		mov	r3, #-1
 231 002a 82B2     		uxth	r2, r0
 232 002c 2146     		mov	r1, r4
 233 002e 3046     		mov	r0, r6
 234 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 235              	.LVL5:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   //Retrieve pending message from CAN_RXFIFO0 and store the data into RxData buffer, and frame info
 348:Core/Src/main.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 236              		.loc 1 348 3 is_stmt 1 view .LVU45
 237 0034 4B4D     		ldr	r5, .L13+20
 238 0036 2B46     		mov	r3, r5
 239 0038 4B4A     		ldr	r2, .L13+24
 240 003a 0021     		movs	r1, #0
 241 003c 3846     		mov	r0, r7
 242 003e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 243              	.LVL6:
 349:Core/Src/main.c **** 
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 12


 350:Core/Src/main.c ****   //Decode Byte 1
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   //Set the flags
 354:Core/Src/main.c ****   wire_connected = (RxData[0] & 0x01) ? 1 : 0;// mask all the bits except bit 1
 244              		.loc 1 354 3 view .LVU46
 245              		.loc 1 354 27 is_stmt 0 view .LVU47
 246 0042 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 247              		.loc 1 354 43 view .LVU48
 248 0044 01F00102 		and	r2, r1, #1
 249              		.loc 1 354 18 view .LVU49
 250 0048 484B     		ldr	r3, .L13+28
 251 004a 1A70     		strb	r2, [r3]
 355:Core/Src/main.c ****   battery_charging = (RxData[0] & 0x02)?  1 : 0 ; // mask all the bits except bit 2
 252              		.loc 1 355 3 is_stmt 1 view .LVU50
 253              		.loc 1 355 45 is_stmt 0 view .LVU51
 254 004c C1F34003 		ubfx	r3, r1, #1, #1
 255              		.loc 1 355 20 view .LVU52
 256 0050 4748     		ldr	r0, .L13+32
 257 0052 0370     		strb	r3, [r0]
 356:Core/Src/main.c ****   battery_low = (RxData[0] & 0x04) ? 1 : 0;
 258              		.loc 1 356 3 is_stmt 1 view .LVU53
 259              		.loc 1 356 40 is_stmt 0 view .LVU54
 260 0054 C1F38000 		ubfx	r0, r1, #2, #1
 261              		.loc 1 356 15 view .LVU55
 262 0058 464F     		ldr	r7, .L13+36
 263              	.LVL7:
 264              		.loc 1 356 15 view .LVU56
 265 005a 3870     		strb	r0, [r7]
 357:Core/Src/main.c ****   battery_ready = (RxData[0] & 0x08)? 1 : 0;
 266              		.loc 1 357 3 is_stmt 1 view .LVU57
 267              		.loc 1 357 41 is_stmt 0 view .LVU58
 268 005c C1F3C001 		ubfx	r1, r1, #3, #1
 269              		.loc 1 357 17 view .LVU59
 270 0060 454F     		ldr	r7, .L13+40
 271 0062 3970     		strb	r1, [r7]
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   sprintf(msg, "Wire Connected: %d\nBattery Charging: %d\nBattery Low: %s\nBattery Ready: %s\n", wi
 272              		.loc 1 359 3 is_stmt 1 view .LVU60
 273 0064 0191     		str	r1, [sp, #4]
 274 0066 0090     		str	r0, [sp]
 275 0068 4449     		ldr	r1, .L13+44
 276 006a 2046     		mov	r0, r4
 277 006c FFF7FEFF 		bl	sprintf
 278              	.LVL8:
 360:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 279              		.loc 1 360 3 view .LVU61
 280              		.loc 1 360 45 is_stmt 0 view .LVU62
 281 0070 2046     		mov	r0, r4
 282 0072 FFF7FEFF 		bl	strlen
 283              	.LVL9:
 284              		.loc 1 360 3 view .LVU63
 285 0076 4FF0FF33 		mov	r3, #-1
 286 007a 82B2     		uxth	r2, r0
 287 007c 2146     		mov	r1, r4
 288 007e 3046     		mov	r0, r6
 289 0080 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 13


 290              	.LVL10:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   //Decode Byte 2
 363:Core/Src/main.c ****   sprintf(msg, "SOC: %d", RxData[1]);
 291              		.loc 1 363 3 is_stmt 1 view .LVU64
 292 0084 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 293 0086 3E49     		ldr	r1, .L13+48
 294 0088 2046     		mov	r0, r4
 295 008a FFF7FEFF 		bl	sprintf
 296              	.LVL11:
 364:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 297              		.loc 1 364 3 view .LVU65
 298              		.loc 1 364 45 is_stmt 0 view .LVU66
 299 008e 2046     		mov	r0, r4
 300 0090 FFF7FEFF 		bl	strlen
 301              	.LVL12:
 302              		.loc 1 364 3 view .LVU67
 303 0094 4FF0FF33 		mov	r3, #-1
 304 0098 82B2     		uxth	r2, r0
 305 009a 2146     		mov	r1, r4
 306 009c 3046     		mov	r0, r6
 307 009e FFF7FEFF 		bl	HAL_UART_Transmit
 308              	.LVL13:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   //Decode Byte 3 and 4, battery current level
 367:Core/Src/main.c ****   float battery_current = (((RxData[3] << 8) | RxData[2]) - 5000 )/ 0.1;
 309              		.loc 1 367 3 is_stmt 1 view .LVU68
 310              		.loc 1 367 36 is_stmt 0 view .LVU69
 311 00a2 EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 312              		.loc 1 367 54 view .LVU70
 313 00a4 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 314              		.loc 1 367 46 view .LVU71
 315 00a6 40EA0320 		orr	r0, r0, r3, lsl #8
 316              		.loc 1 367 67 view .LVU72
 317 00aa A0F59C50 		sub	r0, r0, #4992
 318 00ae 0838     		subs	r0, r0, #8
 319 00b0 FFF7FEFF 		bl	__aeabi_i2d
 320              	.LVL14:
 321 00b4 26A3     		adr	r3, .L13
 322 00b6 D3E90023 		ldrd	r2, [r3]
 323 00ba FFF7FEFF 		bl	__aeabi_ddiv
 324              	.LVL15:
 325              		.loc 1 367 9 view .LVU73
 326 00be FFF7FEFF 		bl	__aeabi_d2f
 327              	.LVL16:
 368:Core/Src/main.c ****   sprintf(msg, "Battery Current: %f", battery_current);
 328              		.loc 1 368 3 is_stmt 1 view .LVU74
 329 00c2 FFF7FEFF 		bl	__aeabi_f2d
 330              	.LVL17:
 331              		.loc 1 368 3 is_stmt 0 view .LVU75
 332 00c6 0246     		mov	r2, r0
 333 00c8 0B46     		mov	r3, r1
 334 00ca 2E49     		ldr	r1, .L13+52
 335 00cc 2046     		mov	r0, r4
 336 00ce FFF7FEFF 		bl	sprintf
 337              	.LVL18:
 369:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 14


 338              		.loc 1 369 3 is_stmt 1 view .LVU76
 339              		.loc 1 369 45 is_stmt 0 view .LVU77
 340 00d2 2046     		mov	r0, r4
 341 00d4 FFF7FEFF 		bl	strlen
 342              	.LVL19:
 343              		.loc 1 369 3 view .LVU78
 344 00d8 4FF0FF33 		mov	r3, #-1
 345 00dc 82B2     		uxth	r2, r0
 346 00de 2146     		mov	r1, r4
 347 00e0 3046     		mov	r0, r6
 348 00e2 FFF7FEFF 		bl	HAL_UART_Transmit
 349              	.LVL20:
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   //Decode Byte 5 and 6, battery voltage level
 372:Core/Src/main.c ****   float battery_voltage = ((RxData[5] << 8) | RxData[4]) / 1000;
 350              		.loc 1 372 3 is_stmt 1 view .LVU79
 351              		.loc 1 372 35 is_stmt 0 view .LVU80
 352 00e6 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 353              		.loc 1 372 53 view .LVU81
 354 00e8 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 355              		.loc 1 372 45 view .LVU82
 356 00ea 40EA0320 		orr	r0, r0, r3, lsl #8
 357              		.loc 1 372 58 view .LVU83
 358 00ee 264B     		ldr	r3, .L13+56
 359 00f0 83FB0030 		smull	r3, r0, r3, r0
 360              		.loc 1 372 9 view .LVU84
 361 00f4 8011     		asrs	r0, r0, #6
 362 00f6 FFF7FEFF 		bl	__aeabi_i2f
 363              	.LVL21:
 373:Core/Src/main.c ****   sprintf(msg, "Battery Voltage: %f", battery_voltage);
 364              		.loc 1 373 3 is_stmt 1 view .LVU85
 365 00fa FFF7FEFF 		bl	__aeabi_f2d
 366              	.LVL22:
 367              		.loc 1 373 3 is_stmt 0 view .LVU86
 368 00fe 0246     		mov	r2, r0
 369 0100 0B46     		mov	r3, r1
 370 0102 2249     		ldr	r1, .L13+60
 371 0104 2046     		mov	r0, r4
 372 0106 FFF7FEFF 		bl	sprintf
 373              	.LVL23:
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   //Decode Byte 7
 376:Core/Src/main.c ****   uint8_t battery_failure = RxData[6];
 374              		.loc 1 376 3 is_stmt 1 view .LVU87
 375              		.loc 1 376 11 is_stmt 0 view .LVU88
 376 010a AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 377              	.LVL24:
 377:Core/Src/main.c ****   
 378:Core/Src/main.c ****   switch (battery_failure) {
 378              		.loc 1 378 3 is_stmt 1 view .LVU89
 379 010c 032B     		cmp	r3, #3
 380 010e 08D8     		bhi	.L5
 381 0110 DFE803F0 		tbb	[pc, r3]
 382              	.L8:
 383 0114 02       		.byte	(.L11-.L8)/2
 384 0115 09       		.byte	(.L10-.L8)/2
 385 0116 0F       		.byte	(.L9-.L8)/2
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 15


 386 0117 15       		.byte	(.L7-.L8)/2
 387              		.p2align 1
 388              	.L11:
 379:Core/Src/main.c ****   case 0x00:
 380:Core/Src/main.c ****     sprintf(msg, "Battery Failure: %s", "No Failure");
 389              		.loc 1 380 5 view .LVU90
 390 0118 1D4A     		ldr	r2, .L13+64
 391 011a 1E49     		ldr	r1, .L13+68
 392 011c 0E48     		ldr	r0, .L13+8
 393 011e FFF7FEFF 		bl	sprintf
 394              	.LVL25:
 381:Core/Src/main.c ****     break;
 395              		.loc 1 381 5 view .LVU91
 396              	.L5:
 382:Core/Src/main.c ****   case 0x01:
 383:Core/Src/main.c ****     sprintf(msg, "Battery Failure: %s", "Level 1(Stop Now)");
 384:Core/Src/main.c ****     break;
 385:Core/Src/main.c ****   case 0x02:
 386:Core/Src/main.c ****     sprintf(msg, "Battery Failure: %s", "Level 2(Power Reduce to 50)");
 387:Core/Src/main.c ****     break;
 388:Core/Src/main.c ****   case 0x03:
 389:Core/Src/main.c ****     sprintf(msg, "Battery Failure: %s", "Level 3(Alarm)");
 390:Core/Src/main.c ****     break;
 391:Core/Src/main.c ****   }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** }
 397              		.loc 1 393 1 is_stmt 0 view .LVU92
 398 0122 03B0     		add	sp, sp, #12
 399              	.LCFI5:
 400              		.cfi_remember_state
 401              		.cfi_def_cfa_offset 20
 402              		@ sp needed
 403 0124 F0BD     		pop	{r4, r5, r6, r7, pc}
 404              	.LVL26:
 405              	.L10:
 406              	.LCFI6:
 407              		.cfi_restore_state
 383:Core/Src/main.c ****     break;
 408              		.loc 1 383 5 is_stmt 1 view .LVU93
 409 0126 1C4A     		ldr	r2, .L13+72
 410 0128 1A49     		ldr	r1, .L13+68
 411 012a 0B48     		ldr	r0, .L13+8
 412 012c FFF7FEFF 		bl	sprintf
 413              	.LVL27:
 384:Core/Src/main.c ****   case 0x02:
 414              		.loc 1 384 5 view .LVU94
 415 0130 F7E7     		b	.L5
 416              	.LVL28:
 417              	.L9:
 386:Core/Src/main.c ****     break;
 418              		.loc 1 386 5 view .LVU95
 419 0132 1A4A     		ldr	r2, .L13+76
 420 0134 1749     		ldr	r1, .L13+68
 421 0136 0848     		ldr	r0, .L13+8
 422 0138 FFF7FEFF 		bl	sprintf
 423              	.LVL29:
 387:Core/Src/main.c ****   case 0x03:
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 16


 424              		.loc 1 387 5 view .LVU96
 425 013c F1E7     		b	.L5
 426              	.LVL30:
 427              	.L7:
 389:Core/Src/main.c ****     break;
 428              		.loc 1 389 5 view .LVU97
 429 013e 184A     		ldr	r2, .L13+80
 430 0140 1449     		ldr	r1, .L13+68
 431 0142 0548     		ldr	r0, .L13+8
 432 0144 FFF7FEFF 		bl	sprintf
 433              	.LVL31:
 390:Core/Src/main.c ****   }
 434              		.loc 1 390 5 view .LVU98
 435              		.loc 1 393 1 is_stmt 0 view .LVU99
 436 0148 EBE7     		b	.L5
 437              	.L14:
 438 014a 00BFAFF3 		.align	3
 438      0080
 439              	.L13:
 440 0150 9A999999 		.word	-1717986918
 441 0154 9999B93F 		.word	1069128089
 442 0158 00000000 		.word	.LANCHOR0
 443 015c 00000000 		.word	.LC0
 444 0160 00000000 		.word	.LANCHOR1
 445 0164 00000000 		.word	.LANCHOR2
 446 0168 00000000 		.word	.LANCHOR3
 447 016c 00000000 		.word	.LANCHOR4
 448 0170 00000000 		.word	.LANCHOR5
 449 0174 00000000 		.word	.LANCHOR6
 450 0178 00000000 		.word	.LANCHOR7
 451 017c 1C000000 		.word	.LC1
 452 0180 68000000 		.word	.LC2
 453 0184 70000000 		.word	.LC3
 454 0188 D34D6210 		.word	274877907
 455 018c 84000000 		.word	.LC4
 456 0190 98000000 		.word	.LC5
 457 0194 A4000000 		.word	.LC6
 458 0198 B8000000 		.word	.LC7
 459 019c CC000000 		.word	.LC8
 460 01a0 E8000000 		.word	.LC9
 461              		.cfi_endproc
 462              	.LFE71:
 464              		.section	.text.Error_Handler,"ax",%progbits
 465              		.align	1
 466              		.global	Error_Handler
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 471              	Error_Handler:
 472              	.LFB72:
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** /* USER CODE END 4 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 399:Core/Src/main.c ****   * @retval None
 400:Core/Src/main.c ****   */
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 17


 401:Core/Src/main.c **** void Error_Handler(void)
 402:Core/Src/main.c **** {
 473              		.loc 1 402 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ Volatile: function does not return.
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 403:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 404:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 405:Core/Src/main.c ****   __disable_irq();
 479              		.loc 1 405 3 view .LVU101
 480              	.LBB8:
 481              	.LBI8:
 482              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 18


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 19


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 483              		.loc 2 140 27 view .LVU102
 484              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 485              		.loc 2 142 3 view .LVU103
 486              		.syntax unified
 487              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 488 0000 72B6     		cpsid i
 489              	@ 0 "" 2
 490              		.thumb
 491              		.syntax unified
 492              	.L16:
 493              	.LBE9:
 494              	.LBE8:
 406:Core/Src/main.c ****   while (1)
 495              		.loc 1 406 3 discriminator 1 view .LVU104
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 20


 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****   }
 496              		.loc 1 408 3 discriminator 1 view .LVU105
 406:Core/Src/main.c ****   while (1)
 497              		.loc 1 406 9 discriminator 1 view .LVU106
 498 0002 FEE7     		b	.L16
 499              		.cfi_endproc
 500              	.LFE72:
 502              		.section	.text.MX_CAN_Init,"ax",%progbits
 503              		.align	1
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	MX_CAN_Init:
 509              	.LFB67:
 196:Core/Src/main.c **** 
 510              		.loc 1 196 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 40
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514 0000 00B5     		push	{lr}
 515              	.LCFI7:
 516              		.cfi_def_cfa_offset 4
 517              		.cfi_offset 14, -4
 518 0002 8BB0     		sub	sp, sp, #44
 519              	.LCFI8:
 520              		.cfi_def_cfa_offset 48
 205:Core/Src/main.c ****   hcan.Init.Prescaler = 4;
 521              		.loc 1 205 3 view .LVU108
 205:Core/Src/main.c ****   hcan.Init.Prescaler = 4;
 522              		.loc 1 205 17 is_stmt 0 view .LVU109
 523 0004 1748     		ldr	r0, .L23
 524 0006 184B     		ldr	r3, .L23+4
 525 0008 0360     		str	r3, [r0]
 206:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 526              		.loc 1 206 3 is_stmt 1 view .LVU110
 206:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 527              		.loc 1 206 23 is_stmt 0 view .LVU111
 528 000a 0423     		movs	r3, #4
 529 000c 4360     		str	r3, [r0, #4]
 207:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 530              		.loc 1 207 3 is_stmt 1 view .LVU112
 207:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 531              		.loc 1 207 18 is_stmt 0 view .LVU113
 532 000e 0023     		movs	r3, #0
 533 0010 8360     		str	r3, [r0, #8]
 208:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_15TQ;
 534              		.loc 1 208 3 is_stmt 1 view .LVU114
 208:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_15TQ;
 535              		.loc 1 208 27 is_stmt 0 view .LVU115
 536 0012 C360     		str	r3, [r0, #12]
 209:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 537              		.loc 1 209 3 is_stmt 1 view .LVU116
 209:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 538              		.loc 1 209 22 is_stmt 0 view .LVU117
 539 0014 4FF46022 		mov	r2, #917504
 540 0018 0261     		str	r2, [r0, #16]
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 21


 210:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 541              		.loc 1 210 3 is_stmt 1 view .LVU118
 210:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 542              		.loc 1 210 22 is_stmt 0 view .LVU119
 543 001a 4FF48012 		mov	r2, #1048576
 544 001e 4261     		str	r2, [r0, #20]
 211:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 545              		.loc 1 211 3 is_stmt 1 view .LVU120
 211:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 546              		.loc 1 211 31 is_stmt 0 view .LVU121
 547 0020 0376     		strb	r3, [r0, #24]
 212:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 548              		.loc 1 212 3 is_stmt 1 view .LVU122
 212:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 549              		.loc 1 212 24 is_stmt 0 view .LVU123
 550 0022 4376     		strb	r3, [r0, #25]
 213:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 551              		.loc 1 213 3 is_stmt 1 view .LVU124
 213:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 552              		.loc 1 213 24 is_stmt 0 view .LVU125
 553 0024 8376     		strb	r3, [r0, #26]
 214:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 554              		.loc 1 214 3 is_stmt 1 view .LVU126
 214:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 555              		.loc 1 214 32 is_stmt 0 view .LVU127
 556 0026 C376     		strb	r3, [r0, #27]
 215:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 557              		.loc 1 215 3 is_stmt 1 view .LVU128
 215:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 558              		.loc 1 215 31 is_stmt 0 view .LVU129
 559 0028 0377     		strb	r3, [r0, #28]
 216:Core/Src/main.c **** 
 560              		.loc 1 216 3 is_stmt 1 view .LVU130
 216:Core/Src/main.c **** 
 561              		.loc 1 216 34 is_stmt 0 view .LVU131
 562 002a 4377     		strb	r3, [r0, #29]
 218:Core/Src/main.c ****   {
 563              		.loc 1 218 3 is_stmt 1 view .LVU132
 218:Core/Src/main.c ****   {
 564              		.loc 1 218 7 is_stmt 0 view .LVU133
 565 002c FFF7FEFF 		bl	HAL_CAN_Init
 566              	.LVL32:
 218:Core/Src/main.c ****   {
 567              		.loc 1 218 6 view .LVU134
 568 0030 98B9     		cbnz	r0, .L21
 223:Core/Src/main.c ****   canfilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 569              		.loc 1 223 3 is_stmt 1 view .LVU135
 224:Core/Src/main.c ****   canfilterConfig.FilterBank = 10;
 570              		.loc 1 224 3 view .LVU136
 224:Core/Src/main.c ****   canfilterConfig.FilterBank = 10;
 571              		.loc 1 224 36 is_stmt 0 view .LVU137
 572 0032 0122     		movs	r2, #1
 573 0034 0892     		str	r2, [sp, #32]
 225:Core/Src/main.c ****   canfilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 574              		.loc 1 225 3 is_stmt 1 view .LVU138
 225:Core/Src/main.c ****   canfilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 575              		.loc 1 225 30 is_stmt 0 view .LVU139
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 22


 576 0036 0A23     		movs	r3, #10
 577 0038 0593     		str	r3, [sp, #20]
 226:Core/Src/main.c ****   canfilterConfig.FilterIdHigh = 0x0000;
 578              		.loc 1 226 3 is_stmt 1 view .LVU140
 226:Core/Src/main.c ****   canfilterConfig.FilterIdHigh = 0x0000;
 579              		.loc 1 226 40 is_stmt 0 view .LVU141
 580 003a 0023     		movs	r3, #0
 581 003c 0493     		str	r3, [sp, #16]
 227:Core/Src/main.c ****   canfilterConfig.FilterIdLow = 0x0000;
 582              		.loc 1 227 3 is_stmt 1 view .LVU142
 227:Core/Src/main.c ****   canfilterConfig.FilterIdLow = 0x0000;
 583              		.loc 1 227 32 is_stmt 0 view .LVU143
 584 003e 0093     		str	r3, [sp]
 228:Core/Src/main.c ****   canfilterConfig.FilterMaskIdHigh = 0;
 585              		.loc 1 228 3 is_stmt 1 view .LVU144
 228:Core/Src/main.c ****   canfilterConfig.FilterMaskIdHigh = 0;
 586              		.loc 1 228 31 is_stmt 0 view .LVU145
 587 0040 0193     		str	r3, [sp, #4]
 229:Core/Src/main.c ****   canfilterConfig.FilterMaskIdLow = 0;
 588              		.loc 1 229 3 is_stmt 1 view .LVU146
 229:Core/Src/main.c ****   canfilterConfig.FilterMaskIdLow = 0;
 589              		.loc 1 229 36 is_stmt 0 view .LVU147
 590 0042 0293     		str	r3, [sp, #8]
 230:Core/Src/main.c ****   canfilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 591              		.loc 1 230 3 is_stmt 1 view .LVU148
 230:Core/Src/main.c ****   canfilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 592              		.loc 1 230 35 is_stmt 0 view .LVU149
 593 0044 0393     		str	r3, [sp, #12]
 231:Core/Src/main.c ****   canfilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 594              		.loc 1 231 3 is_stmt 1 view .LVU150
 231:Core/Src/main.c ****   canfilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 595              		.loc 1 231 30 is_stmt 0 view .LVU151
 596 0046 0693     		str	r3, [sp, #24]
 232:Core/Src/main.c **** 
 597              		.loc 1 232 3 is_stmt 1 view .LVU152
 232:Core/Src/main.c **** 
 598              		.loc 1 232 31 is_stmt 0 view .LVU153
 599 0048 0792     		str	r2, [sp, #28]
 234:Core/Src/main.c ****     Error_Handler();
 600              		.loc 1 234 3 is_stmt 1 view .LVU154
 234:Core/Src/main.c ****     Error_Handler();
 601              		.loc 1 234 6 is_stmt 0 view .LVU155
 602 004a 6946     		mov	r1, sp
 603 004c 0548     		ldr	r0, .L23
 604 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 605              	.LVL33:
 234:Core/Src/main.c ****     Error_Handler();
 606              		.loc 1 234 5 view .LVU156
 607 0052 20B9     		cbnz	r0, .L22
 239:Core/Src/main.c **** 
 608              		.loc 1 239 1 view .LVU157
 609 0054 0BB0     		add	sp, sp, #44
 610              	.LCFI9:
 611              		.cfi_remember_state
 612              		.cfi_def_cfa_offset 4
 613              		@ sp needed
 614 0056 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 23


 615              	.L21:
 616              	.LCFI10:
 617              		.cfi_restore_state
 220:Core/Src/main.c ****   }
 618              		.loc 1 220 5 is_stmt 1 view .LVU158
 619 005a FFF7FEFF 		bl	Error_Handler
 620              	.LVL34:
 621              	.L22:
 235:Core/Src/main.c ****   }
 622              		.loc 1 235 5 view .LVU159
 623 005e FFF7FEFF 		bl	Error_Handler
 624              	.LVL35:
 625              	.L24:
 626 0062 00BF     		.align	2
 627              	.L23:
 628 0064 00000000 		.word	.LANCHOR8
 629 0068 00640040 		.word	1073767424
 630              		.cfi_endproc
 631              	.LFE67:
 633              		.section	.text.MX_I2C1_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	MX_I2C1_Init:
 640              	.LFB68:
 247:Core/Src/main.c **** 
 641              		.loc 1 247 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645 0000 08B5     		push	{r3, lr}
 646              	.LCFI11:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 3, -8
 649              		.cfi_offset 14, -4
 256:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 650              		.loc 1 256 3 view .LVU161
 256:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 651              		.loc 1 256 18 is_stmt 0 view .LVU162
 652 0002 0A48     		ldr	r0, .L29
 653 0004 0A4B     		ldr	r3, .L29+4
 654 0006 0360     		str	r3, [r0]
 257:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 655              		.loc 1 257 3 is_stmt 1 view .LVU163
 257:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 656              		.loc 1 257 25 is_stmt 0 view .LVU164
 657 0008 0A4B     		ldr	r3, .L29+8
 658 000a 4360     		str	r3, [r0, #4]
 258:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 659              		.loc 1 258 3 is_stmt 1 view .LVU165
 258:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 660              		.loc 1 258 24 is_stmt 0 view .LVU166
 661 000c 0023     		movs	r3, #0
 662 000e 8360     		str	r3, [r0, #8]
 259:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 663              		.loc 1 259 3 is_stmt 1 view .LVU167
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 24


 259:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 664              		.loc 1 259 26 is_stmt 0 view .LVU168
 665 0010 C360     		str	r3, [r0, #12]
 260:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 666              		.loc 1 260 3 is_stmt 1 view .LVU169
 260:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 667              		.loc 1 260 29 is_stmt 0 view .LVU170
 668 0012 4FF48042 		mov	r2, #16384
 669 0016 0261     		str	r2, [r0, #16]
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 670              		.loc 1 261 3 is_stmt 1 view .LVU171
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 671              		.loc 1 261 30 is_stmt 0 view .LVU172
 672 0018 4361     		str	r3, [r0, #20]
 262:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 673              		.loc 1 262 3 is_stmt 1 view .LVU173
 262:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 674              		.loc 1 262 26 is_stmt 0 view .LVU174
 675 001a 8361     		str	r3, [r0, #24]
 263:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 676              		.loc 1 263 3 is_stmt 1 view .LVU175
 263:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 677              		.loc 1 263 30 is_stmt 0 view .LVU176
 678 001c C361     		str	r3, [r0, #28]
 264:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 679              		.loc 1 264 3 is_stmt 1 view .LVU177
 264:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 680              		.loc 1 264 28 is_stmt 0 view .LVU178
 681 001e 0362     		str	r3, [r0, #32]
 265:Core/Src/main.c ****   {
 682              		.loc 1 265 3 is_stmt 1 view .LVU179
 265:Core/Src/main.c ****   {
 683              		.loc 1 265 7 is_stmt 0 view .LVU180
 684 0020 FFF7FEFF 		bl	HAL_I2C_Init
 685              	.LVL36:
 265:Core/Src/main.c ****   {
 686              		.loc 1 265 6 view .LVU181
 687 0024 00B9     		cbnz	r0, .L28
 273:Core/Src/main.c **** 
 688              		.loc 1 273 1 view .LVU182
 689 0026 08BD     		pop	{r3, pc}
 690              	.L28:
 267:Core/Src/main.c ****   }
 691              		.loc 1 267 5 is_stmt 1 view .LVU183
 692 0028 FFF7FEFF 		bl	Error_Handler
 693              	.LVL37:
 694              	.L30:
 695              		.align	2
 696              	.L29:
 697 002c 00000000 		.word	.LANCHOR9
 698 0030 00540040 		.word	1073763328
 699 0034 A0860100 		.word	100000
 700              		.cfi_endproc
 701              	.LFE68:
 703              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 704              		.align	1
 705              		.syntax unified
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 25


 706              		.thumb
 707              		.thumb_func
 709              	MX_USART1_UART_Init:
 710              	.LFB69:
 281:Core/Src/main.c **** 
 711              		.loc 1 281 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715 0000 08B5     		push	{r3, lr}
 716              	.LCFI12:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 3, -8
 719              		.cfi_offset 14, -4
 290:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 720              		.loc 1 290 3 view .LVU185
 290:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 721              		.loc 1 290 19 is_stmt 0 view .LVU186
 722 0002 0A48     		ldr	r0, .L35
 723 0004 0A4B     		ldr	r3, .L35+4
 724 0006 0360     		str	r3, [r0]
 291:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 725              		.loc 1 291 3 is_stmt 1 view .LVU187
 291:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 726              		.loc 1 291 24 is_stmt 0 view .LVU188
 727 0008 4FF4E133 		mov	r3, #115200
 728 000c 4360     		str	r3, [r0, #4]
 292:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 729              		.loc 1 292 3 is_stmt 1 view .LVU189
 292:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 730              		.loc 1 292 26 is_stmt 0 view .LVU190
 731 000e 0023     		movs	r3, #0
 732 0010 8360     		str	r3, [r0, #8]
 293:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 733              		.loc 1 293 3 is_stmt 1 view .LVU191
 293:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 734              		.loc 1 293 24 is_stmt 0 view .LVU192
 735 0012 C360     		str	r3, [r0, #12]
 294:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 736              		.loc 1 294 3 is_stmt 1 view .LVU193
 294:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 737              		.loc 1 294 22 is_stmt 0 view .LVU194
 738 0014 0361     		str	r3, [r0, #16]
 295:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 739              		.loc 1 295 3 is_stmt 1 view .LVU195
 295:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 740              		.loc 1 295 20 is_stmt 0 view .LVU196
 741 0016 0C22     		movs	r2, #12
 742 0018 4261     		str	r2, [r0, #20]
 296:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 743              		.loc 1 296 3 is_stmt 1 view .LVU197
 296:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 744              		.loc 1 296 25 is_stmt 0 view .LVU198
 745 001a 8361     		str	r3, [r0, #24]
 297:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 746              		.loc 1 297 3 is_stmt 1 view .LVU199
 297:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 26


 747              		.loc 1 297 28 is_stmt 0 view .LVU200
 748 001c C361     		str	r3, [r0, #28]
 298:Core/Src/main.c ****   {
 749              		.loc 1 298 3 is_stmt 1 view .LVU201
 298:Core/Src/main.c ****   {
 750              		.loc 1 298 7 is_stmt 0 view .LVU202
 751 001e FFF7FEFF 		bl	HAL_UART_Init
 752              	.LVL38:
 298:Core/Src/main.c ****   {
 753              		.loc 1 298 6 view .LVU203
 754 0022 00B9     		cbnz	r0, .L34
 306:Core/Src/main.c **** 
 755              		.loc 1 306 1 view .LVU204
 756 0024 08BD     		pop	{r3, pc}
 757              	.L34:
 300:Core/Src/main.c ****   }
 758              		.loc 1 300 5 is_stmt 1 view .LVU205
 759 0026 FFF7FEFF 		bl	Error_Handler
 760              	.LVL39:
 761              	.L36:
 762 002a 00BF     		.align	2
 763              	.L35:
 764 002c 00000000 		.word	.LANCHOR1
 765 0030 00380140 		.word	1073821696
 766              		.cfi_endproc
 767              	.LFE69:
 769              		.section	.text.SystemClock_Config,"ax",%progbits
 770              		.align	1
 771              		.global	SystemClock_Config
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 776              	SystemClock_Config:
 777              	.LFB66:
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 778              		.loc 1 156 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 64
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782 0000 00B5     		push	{lr}
 783              	.LCFI13:
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 14, -4
 786 0002 91B0     		sub	sp, sp, #68
 787              	.LCFI14:
 788              		.cfi_def_cfa_offset 72
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 789              		.loc 1 157 3 view .LVU207
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 790              		.loc 1 157 22 is_stmt 0 view .LVU208
 791 0004 2822     		movs	r2, #40
 792 0006 0021     		movs	r1, #0
 793 0008 06A8     		add	r0, sp, #24
 794 000a FFF7FEFF 		bl	memset
 795              	.LVL40:
 158:Core/Src/main.c **** 
 796              		.loc 1 158 3 is_stmt 1 view .LVU209
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 27


 158:Core/Src/main.c **** 
 797              		.loc 1 158 22 is_stmt 0 view .LVU210
 798 000e 0023     		movs	r3, #0
 799 0010 0193     		str	r3, [sp, #4]
 800 0012 0293     		str	r3, [sp, #8]
 801 0014 0393     		str	r3, [sp, #12]
 802 0016 0493     		str	r3, [sp, #16]
 803 0018 0593     		str	r3, [sp, #20]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 804              		.loc 1 163 3 is_stmt 1 view .LVU211
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 805              		.loc 1 163 36 is_stmt 0 view .LVU212
 806 001a 0122     		movs	r2, #1
 807 001c 0692     		str	r2, [sp, #24]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 808              		.loc 1 164 3 is_stmt 1 view .LVU213
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 809              		.loc 1 164 30 is_stmt 0 view .LVU214
 810 001e 4FF48033 		mov	r3, #65536
 811 0022 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 812              		.loc 1 165 3 is_stmt 1 view .LVU215
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 813              		.loc 1 166 3 view .LVU216
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 814              		.loc 1 166 30 is_stmt 0 view .LVU217
 815 0024 0A92     		str	r2, [sp, #40]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 816              		.loc 1 167 3 is_stmt 1 view .LVU218
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 817              		.loc 1 167 34 is_stmt 0 view .LVU219
 818 0026 0222     		movs	r2, #2
 819 0028 0D92     		str	r2, [sp, #52]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 820              		.loc 1 168 3 is_stmt 1 view .LVU220
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 821              		.loc 1 168 35 is_stmt 0 view .LVU221
 822 002a 0E93     		str	r3, [sp, #56]
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 823              		.loc 1 169 3 is_stmt 1 view .LVU222
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 824              		.loc 1 169 32 is_stmt 0 view .LVU223
 825 002c 4FF4E013 		mov	r3, #1835008
 826 0030 0F93     		str	r3, [sp, #60]
 170:Core/Src/main.c ****   {
 827              		.loc 1 170 3 is_stmt 1 view .LVU224
 170:Core/Src/main.c ****   {
 828              		.loc 1 170 7 is_stmt 0 view .LVU225
 829 0032 06A8     		add	r0, sp, #24
 830 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 831              	.LVL41:
 170:Core/Src/main.c ****   {
 832              		.loc 1 170 6 view .LVU226
 833 0038 80B9     		cbnz	r0, .L41
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 834              		.loc 1 177 3 is_stmt 1 view .LVU227
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 28


 835              		.loc 1 177 31 is_stmt 0 view .LVU228
 836 003a 0F23     		movs	r3, #15
 837 003c 0193     		str	r3, [sp, #4]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 838              		.loc 1 179 3 is_stmt 1 view .LVU229
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 839              		.loc 1 179 34 is_stmt 0 view .LVU230
 840 003e 0221     		movs	r1, #2
 841 0040 0291     		str	r1, [sp, #8]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 842              		.loc 1 180 3 is_stmt 1 view .LVU231
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 843              		.loc 1 180 35 is_stmt 0 view .LVU232
 844 0042 0023     		movs	r3, #0
 845 0044 0393     		str	r3, [sp, #12]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 846              		.loc 1 181 3 is_stmt 1 view .LVU233
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 847              		.loc 1 181 36 is_stmt 0 view .LVU234
 848 0046 4FF48062 		mov	r2, #1024
 849 004a 0492     		str	r2, [sp, #16]
 182:Core/Src/main.c **** 
 850              		.loc 1 182 3 is_stmt 1 view .LVU235
 182:Core/Src/main.c **** 
 851              		.loc 1 182 36 is_stmt 0 view .LVU236
 852 004c 0593     		str	r3, [sp, #20]
 184:Core/Src/main.c ****   {
 853              		.loc 1 184 3 is_stmt 1 view .LVU237
 184:Core/Src/main.c ****   {
 854              		.loc 1 184 7 is_stmt 0 view .LVU238
 855 004e 01A8     		add	r0, sp, #4
 856 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 857              	.LVL42:
 184:Core/Src/main.c ****   {
 858              		.loc 1 184 6 view .LVU239
 859 0054 20B9     		cbnz	r0, .L42
 188:Core/Src/main.c **** 
 860              		.loc 1 188 1 view .LVU240
 861 0056 11B0     		add	sp, sp, #68
 862              	.LCFI15:
 863              		.cfi_remember_state
 864              		.cfi_def_cfa_offset 4
 865              		@ sp needed
 866 0058 5DF804FB 		ldr	pc, [sp], #4
 867              	.L41:
 868              	.LCFI16:
 869              		.cfi_restore_state
 172:Core/Src/main.c ****   }
 870              		.loc 1 172 5 is_stmt 1 view .LVU241
 871 005c FFF7FEFF 		bl	Error_Handler
 872              	.LVL43:
 873              	.L42:
 186:Core/Src/main.c ****   }
 874              		.loc 1 186 5 view .LVU242
 875 0060 FFF7FEFF 		bl	Error_Handler
 876              	.LVL44:
 877              		.cfi_endproc
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 29


 878              	.LFE66:
 880              		.section	.text.main,"ax",%progbits
 881              		.align	1
 882              		.global	main
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 887              	main:
 888              	.LFB65:
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 889              		.loc 1 83 1 view -0
 890              		.cfi_startproc
 891              		@ Volatile: function does not return.
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894 0000 08B5     		push	{r3, lr}
 895              	.LCFI17:
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 3, -8
 898              		.cfi_offset 14, -4
  91:Core/Src/main.c **** 
 899              		.loc 1 91 3 view .LVU244
 900 0002 FFF7FEFF 		bl	HAL_Init
 901              	.LVL45:
  98:Core/Src/main.c **** 
 902              		.loc 1 98 3 view .LVU245
 903 0006 FFF7FEFF 		bl	SystemClock_Config
 904              	.LVL46:
 105:Core/Src/main.c ****   MX_CAN_Init();
 905              		.loc 1 105 3 view .LVU246
 906 000a FFF7FEFF 		bl	MX_GPIO_Init
 907              	.LVL47:
 106:Core/Src/main.c ****   MX_I2C1_Init();
 908              		.loc 1 106 3 view .LVU247
 909 000e FFF7FEFF 		bl	MX_CAN_Init
 910              	.LVL48:
 107:Core/Src/main.c ****   MX_USART1_UART_Init();
 911              		.loc 1 107 3 view .LVU248
 912 0012 FFF7FEFF 		bl	MX_I2C1_Init
 913              	.LVL49:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 914              		.loc 1 108 3 view .LVU249
 915 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 916              	.LVL50:
 112:Core/Src/main.c **** 
 917              		.loc 1 112 3 view .LVU250
 918 001a 044C     		ldr	r4, .L46
 919 001c 2046     		mov	r0, r4
 920 001e FFF7FEFF 		bl	HAL_CAN_Start
 921              	.LVL51:
 115:Core/Src/main.c **** 
 922              		.loc 1 115 3 view .LVU251
 923 0022 0221     		movs	r1, #2
 924 0024 2046     		mov	r0, r4
 925 0026 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 926              	.LVL52:
 927              	.L44:
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 30


 142:Core/Src/main.c ****   {
 928              		.loc 1 142 3 discriminator 1 view .LVU252
 147:Core/Src/main.c ****   /* USER CODE END 3 */
 929              		.loc 1 147 3 discriminator 1 view .LVU253
 142:Core/Src/main.c ****   {
 930              		.loc 1 142 9 discriminator 1 view .LVU254
 931 002a FEE7     		b	.L44
 932              	.L47:
 933              		.align	2
 934              	.L46:
 935 002c 00000000 		.word	.LANCHOR8
 936              		.cfi_endproc
 937              	.LFE65:
 939              		.global	discharge_MOS
 940              		.global	battery_ready
 941              		.global	battery_low
 942              		.global	battery_charging
 943              		.global	wire_connected
 944              		.global	msg
 945              		.global	TxMailbox
 946              		.global	RxData
 947              		.global	RxHeader
 948              		.global	TxHeader
 949              		.global	huart1
 950              		.global	hi2c1
 951              		.global	hcan
 952              		.section	.bss.RxData,"aw",%nobits
 953              		.align	2
 954              		.set	.LANCHOR2,. + 0
 957              	RxData:
 958 0000 00000000 		.space	8
 958      00000000 
 959              		.section	.bss.RxHeader,"aw",%nobits
 960              		.align	2
 961              		.set	.LANCHOR3,. + 0
 964              	RxHeader:
 965 0000 00000000 		.space	28
 965      00000000 
 965      00000000 
 965      00000000 
 965      00000000 
 966              		.section	.bss.TxHeader,"aw",%nobits
 967              		.align	2
 970              	TxHeader:
 971 0000 00000000 		.space	24
 971      00000000 
 971      00000000 
 971      00000000 
 971      00000000 
 972              		.section	.bss.TxMailbox,"aw",%nobits
 975              	TxMailbox:
 976 0000 00       		.space	1
 977              		.section	.bss.battery_charging,"aw",%nobits
 978              		.set	.LANCHOR5,. + 0
 981              	battery_charging:
 982 0000 00       		.space	1
 983              		.section	.bss.battery_low,"aw",%nobits
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 31


 984              		.set	.LANCHOR6,. + 0
 987              	battery_low:
 988 0000 00       		.space	1
 989              		.section	.bss.battery_ready,"aw",%nobits
 990              		.set	.LANCHOR7,. + 0
 993              	battery_ready:
 994 0000 00       		.space	1
 995              		.section	.bss.discharge_MOS,"aw",%nobits
 998              	discharge_MOS:
 999 0000 00       		.space	1
 1000              		.section	.bss.hcan,"aw",%nobits
 1001              		.align	2
 1002              		.set	.LANCHOR8,. + 0
 1005              	hcan:
 1006 0000 00000000 		.space	40
 1006      00000000 
 1006      00000000 
 1006      00000000 
 1006      00000000 
 1007              		.section	.bss.hi2c1,"aw",%nobits
 1008              		.align	2
 1009              		.set	.LANCHOR9,. + 0
 1012              	hi2c1:
 1013 0000 00000000 		.space	84
 1013      00000000 
 1013      00000000 
 1013      00000000 
 1013      00000000 
 1014              		.section	.bss.huart1,"aw",%nobits
 1015              		.align	2
 1016              		.set	.LANCHOR1,. + 0
 1019              	huart1:
 1020 0000 00000000 		.space	72
 1020      00000000 
 1020      00000000 
 1020      00000000 
 1020      00000000 
 1021              		.section	.bss.msg,"aw",%nobits
 1022              		.align	2
 1023              		.set	.LANCHOR0,. + 0
 1026              	msg:
 1027 0000 00000000 		.space	50
 1027      00000000 
 1027      00000000 
 1027      00000000 
 1027      00000000 
 1028              		.section	.bss.wire_connected,"aw",%nobits
 1029              		.set	.LANCHOR4,. + 0
 1032              	wire_connected:
 1033 0000 00       		.space	1
 1034              		.text
 1035              	.Letext0:
 1036              		.file 3 "c:\\users\\saurav raj paudel\\desktop\\projects\\stm32\\tool\\gcc-arm-none-eabi-10.3-2021
 1037              		.file 4 "c:\\users\\saurav raj paudel\\desktop\\projects\\stm32\\tool\\gcc-arm-none-eabi-10.3-2021
 1038              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1039              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1040              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 32


 1041              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1042              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1043              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1044              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1045              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1046              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1047              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1048              		.file 15 "<built-in>"
 1049              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:143    .text.MX_GPIO_Init:00000084 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:149    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:186    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:192    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:383    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000114 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:387    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000118 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:440    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000150 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:465    .text.Error_Handler:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:471    .text.Error_Handler:00000000 Error_Handler
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:503    .text.MX_CAN_Init:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:508    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:628    .text.MX_CAN_Init:00000064 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:634    .text.MX_I2C1_Init:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:639    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:697    .text.MX_I2C1_Init:0000002c $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:704    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:709    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:764    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:770    .text.SystemClock_Config:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:776    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:881    .text.main:00000000 $t
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:887    .text.main:00000000 main
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:935    .text.main:0000002c $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:998    .bss.discharge_MOS:00000000 discharge_MOS
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:993    .bss.battery_ready:00000000 battery_ready
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:987    .bss.battery_low:00000000 battery_low
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:981    .bss.battery_charging:00000000 battery_charging
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1032   .bss.wire_connected:00000000 wire_connected
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1026   .bss.msg:00000000 msg
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:975    .bss.TxMailbox:00000000 TxMailbox
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:957    .bss.RxData:00000000 RxData
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:964    .bss.RxHeader:00000000 RxHeader
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:970    .bss.TxHeader:00000000 TxHeader
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1019   .bss.huart1:00000000 huart1
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1012   .bss.hi2c1:00000000 hi2c1
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1005   .bss.hcan:00000000 hcan
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:953    .bss.RxData:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:960    .bss.RxHeader:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:967    .bss.TxHeader:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:976    .bss.TxMailbox:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:982    .bss.battery_charging:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:988    .bss.battery_low:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:994    .bss.battery_ready:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:999    .bss.discharge_MOS:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1001   .bss.hcan:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1008   .bss.hi2c1:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1015   .bss.huart1:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1022   .bss.msg:00000000 $d
C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s:1033   .bss.wire_connected:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\Users\SAURAV~1\AppData\Local\Temp\cc92NxsK.s 			page 34


__aeabi_i2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_f2d
__aeabi_i2f
strlen
HAL_UART_Transmit
HAL_CAN_GetRxMessage
sprintf
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
